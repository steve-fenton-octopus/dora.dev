steps:
  - id: 'Stage FirebaseConfig'
    name: 'bash'
    env:
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      # Copy correct Firestore config per project
      cp -v ci/firebase-config.${PROJECT_ID}.js /workspace/hugo/static/js/firebase-config.js

  - id: 'Hugo Build PREVIEW_CHANNEL (w/ Drafts) Site'
    name: gcr.io/$PROJECT_ID/hugo
    script: |
      # Build draft site
      hugo -v -s ./hugo -d /workspace/hugo/public --debug -D

      # 2023-08-13: Dace is debugging a missing stylesheet
      ls /workspace/hugo/public/core

  - id: 'Firebase deploy PREVIEW_CHANNEL (w/ Drafts) Hosting'
    name: gcr.io/$PROJECT_ID/firebase
    env:
      - '_PR_NUMBER=$_PR_NUMBER'
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      PREVIEW_CHANNEL="PR$_PR_NUMBER-DRAFT"
      firebase hosting:channel:deploy $PREVIEW_CHANNEL --project=${PROJECT_ID}

      # get the url of this preview channel
      # (it returns in format `i  hosting:channel: https://<url>`)
      CHANNEL_DATA="$(firebase hosting:channel:open $PREVIEW_CHANNEL)"

      # extract the URL from the channel data and save it to /workspace
      echo "${CHANNEL_DATA##* }" > /workspace/preview-draft-url.txt
      cat /workspace/preview-draft-url.txt

  - id: 'Hugo Build PREVIEW_CHANNEL (w/o Drafts) Site'
    name: gcr.io/$PROJECT_ID/hugo
    script: |
      # Build published site
      rm -rf /workspace/hugo/public
      hugo -v -s ./hugo -d /workspace/hugo/public --debug

  - id: 'Firebase deploy PREVIEW_CHANNEL (w/o Drafts) Hosting'
    name: gcr.io/$PROJECT_ID/firebase
    env:
      - '_PR_NUMBER=$_PR_NUMBER'
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      PREVIEW_CHANNEL="PR$_PR_NUMBER"
      firebase hosting:channel:deploy $PREVIEW_CHANNEL --project=${PROJECT_ID}

      # get the url of this preview channel
      # (it returns in format `i  hosting:channel: https://<url>`)
      CHANNEL_DATA="$(firebase hosting:channel:open $PREVIEW_CHANNEL)"

      # extract the URL from the channel data and save it to /workspace
      echo "${CHANNEL_DATA##* }" > /workspace/preview-published-url.txt
      cat /workspace/preview-published-url.txt

  - id: 'Write PR URL back to github'
    name: 'bash'
    env:
    - '_PR_NUMBER=$_PR_NUMBER'
    - 'REPO_NAME=$REPO_NAME'
    script: |
      # install github cli
      apk update && apk add github-cli

      gh version

      # authenticate
      set +x
      echo "$GH_TOKEN" > .githubtoken
      set -x
      unset GH_TOKEN
      gh auth login --with-token < .githubtoken

      # add preview URLs as comment
      gh pr comment $_PR_NUMBER --repo=dora-team/$REPO_NAME --body "Preview this PR [including DRAFT content] at $(cat /workspace/preview-draft-url.txt)"
      gh pr comment $_PR_NUMBER --repo=dora-team/$REPO_NAME --body "Preview this PR [published content only] at $(cat /workspace/preview-published-url.txt)"
    secretEnv: ['GH_TOKEN']

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
    env: 'GH_TOKEN'
